/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package com.wbsedcl.trms.kafka.substation.log.avro.model;

import org.apache.avro.generic.GenericArray;
import org.apache.avro.specific.SpecificData;
import org.apache.avro.util.Utf8;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

@org.apache.avro.specific.AvroGenerated
public class CreatedFeederAvroModel extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = -758735016138563059L;


  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"CreatedFeederAvroModel\",\"namespace\":\"com.wbsedcl.trms.kafka.substation.log.avro.model\",\"fields\":[{\"name\":\"feederId\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"feederName\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"energyMeterNo\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"substationOfficeId\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"voltageLevel\",\"type\":\"int\"},{\"name\":\"feederType\",\"type\":{\"type\":\"enum\",\"name\":\"FeederType\",\"symbols\":[\"INCOMING_33kV\",\"OUTGOING_33kV\",\"PTR_BAY\",\"OUTGOING_11kV\",\"INCOMING_11kV\"]}},{\"name\":\"sagaId\",\"type\":{\"type\":\"string\",\"logicalType\":\"uuid\"}}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static final SpecificData MODEL$ = new SpecificData();
  static {
    MODEL$.addLogicalTypeConversion(new org.apache.avro.Conversions.UUIDConversion());
  }

  private static final BinaryMessageEncoder<CreatedFeederAvroModel> ENCODER =
      new BinaryMessageEncoder<>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<CreatedFeederAvroModel> DECODER =
      new BinaryMessageDecoder<>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageEncoder instance used by this class.
   * @return the message encoder used by this class
   */
  public static BinaryMessageEncoder<CreatedFeederAvroModel> getEncoder() {
    return ENCODER;
  }

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   * @return the message decoder used by this class
   */
  public static BinaryMessageDecoder<CreatedFeederAvroModel> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   * @return a BinaryMessageDecoder instance for this class backed by the given SchemaStore
   */
  public static BinaryMessageDecoder<CreatedFeederAvroModel> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<>(MODEL$, SCHEMA$, resolver);
  }

  /**
   * Serializes this CreatedFeederAvroModel to a ByteBuffer.
   * @return a buffer holding the serialized data for this instance
   * @throws java.io.IOException if this instance could not be serialized
   */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /**
   * Deserializes a CreatedFeederAvroModel from a ByteBuffer.
   * @param b a byte buffer holding serialized data for an instance of this class
   * @return a CreatedFeederAvroModel instance decoded from the given buffer
   * @throws java.io.IOException if the given bytes could not be deserialized into an instance of this class
   */
  public static CreatedFeederAvroModel fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

  private java.lang.String feederId;
  private java.lang.String feederName;
  private java.lang.String energyMeterNo;
  private java.lang.String substationOfficeId;
  private int voltageLevel;
  private com.wbsedcl.trms.kafka.substation.log.avro.model.FeederType feederType;
  private java.util.UUID sagaId;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public CreatedFeederAvroModel() {}

  /**
   * All-args constructor.
   * @param feederId The new value for feederId
   * @param feederName The new value for feederName
   * @param energyMeterNo The new value for energyMeterNo
   * @param substationOfficeId The new value for substationOfficeId
   * @param voltageLevel The new value for voltageLevel
   * @param feederType The new value for feederType
   * @param sagaId The new value for sagaId
   */
  public CreatedFeederAvroModel(java.lang.String feederId, java.lang.String feederName, java.lang.String energyMeterNo, java.lang.String substationOfficeId, java.lang.Integer voltageLevel, com.wbsedcl.trms.kafka.substation.log.avro.model.FeederType feederType, java.util.UUID sagaId) {
    this.feederId = feederId;
    this.feederName = feederName;
    this.energyMeterNo = energyMeterNo;
    this.substationOfficeId = substationOfficeId;
    this.voltageLevel = voltageLevel;
    this.feederType = feederType;
    this.sagaId = sagaId;
  }

  @Override
  public org.apache.avro.specific.SpecificData getSpecificData() { return MODEL$; }

  @Override
  public org.apache.avro.Schema getSchema() { return SCHEMA$; }

  // Used by DatumWriter.  Applications should not call.
  @Override
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return feederId;
    case 1: return feederName;
    case 2: return energyMeterNo;
    case 3: return substationOfficeId;
    case 4: return voltageLevel;
    case 5: return feederType;
    case 6: return sagaId;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  private static final org.apache.avro.Conversion<?>[] conversions =
      new org.apache.avro.Conversion<?>[] {
      null,
      null,
      null,
      null,
      null,
      null,
      new org.apache.avro.Conversions.UUIDConversion(),
      null
  };

  @Override
  public org.apache.avro.Conversion<?> getConversion(int field) {
    return conversions[field];
  }

  // Used by DatumReader.  Applications should not call.
  @Override
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: feederId = value$ != null ? value$.toString() : null; break;
    case 1: feederName = value$ != null ? value$.toString() : null; break;
    case 2: energyMeterNo = value$ != null ? value$.toString() : null; break;
    case 3: substationOfficeId = value$ != null ? value$.toString() : null; break;
    case 4: voltageLevel = (java.lang.Integer)value$; break;
    case 5: feederType = (com.wbsedcl.trms.kafka.substation.log.avro.model.FeederType)value$; break;
    case 6: sagaId = (java.util.UUID)value$; break;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  /**
   * Gets the value of the 'feederId' field.
   * @return The value of the 'feederId' field.
   */
  public java.lang.String getFeederId() {
    return feederId;
  }


  /**
   * Sets the value of the 'feederId' field.
   * @param value the value to set.
   */
  public void setFeederId(java.lang.String value) {
    this.feederId = value;
  }

  /**
   * Gets the value of the 'feederName' field.
   * @return The value of the 'feederName' field.
   */
  public java.lang.String getFeederName() {
    return feederName;
  }


  /**
   * Sets the value of the 'feederName' field.
   * @param value the value to set.
   */
  public void setFeederName(java.lang.String value) {
    this.feederName = value;
  }

  /**
   * Gets the value of the 'energyMeterNo' field.
   * @return The value of the 'energyMeterNo' field.
   */
  public java.lang.String getEnergyMeterNo() {
    return energyMeterNo;
  }


  /**
   * Sets the value of the 'energyMeterNo' field.
   * @param value the value to set.
   */
  public void setEnergyMeterNo(java.lang.String value) {
    this.energyMeterNo = value;
  }

  /**
   * Gets the value of the 'substationOfficeId' field.
   * @return The value of the 'substationOfficeId' field.
   */
  public java.lang.String getSubstationOfficeId() {
    return substationOfficeId;
  }


  /**
   * Sets the value of the 'substationOfficeId' field.
   * @param value the value to set.
   */
  public void setSubstationOfficeId(java.lang.String value) {
    this.substationOfficeId = value;
  }

  /**
   * Gets the value of the 'voltageLevel' field.
   * @return The value of the 'voltageLevel' field.
   */
  public int getVoltageLevel() {
    return voltageLevel;
  }


  /**
   * Sets the value of the 'voltageLevel' field.
   * @param value the value to set.
   */
  public void setVoltageLevel(int value) {
    this.voltageLevel = value;
  }

  /**
   * Gets the value of the 'feederType' field.
   * @return The value of the 'feederType' field.
   */
  public com.wbsedcl.trms.kafka.substation.log.avro.model.FeederType getFeederType() {
    return feederType;
  }


  /**
   * Sets the value of the 'feederType' field.
   * @param value the value to set.
   */
  public void setFeederType(com.wbsedcl.trms.kafka.substation.log.avro.model.FeederType value) {
    this.feederType = value;
  }

  /**
   * Gets the value of the 'sagaId' field.
   * @return The value of the 'sagaId' field.
   */
  public java.util.UUID getSagaId() {
    return sagaId;
  }


  /**
   * Sets the value of the 'sagaId' field.
   * @param value the value to set.
   */
  public void setSagaId(java.util.UUID value) {
    this.sagaId = value;
  }

  /**
   * Creates a new CreatedFeederAvroModel RecordBuilder.
   * @return A new CreatedFeederAvroModel RecordBuilder
   */
  public static com.wbsedcl.trms.kafka.substation.log.avro.model.CreatedFeederAvroModel.Builder newBuilder() {
    return new com.wbsedcl.trms.kafka.substation.log.avro.model.CreatedFeederAvroModel.Builder();
  }

  /**
   * Creates a new CreatedFeederAvroModel RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new CreatedFeederAvroModel RecordBuilder
   */
  public static com.wbsedcl.trms.kafka.substation.log.avro.model.CreatedFeederAvroModel.Builder newBuilder(com.wbsedcl.trms.kafka.substation.log.avro.model.CreatedFeederAvroModel.Builder other) {
    if (other == null) {
      return new com.wbsedcl.trms.kafka.substation.log.avro.model.CreatedFeederAvroModel.Builder();
    } else {
      return new com.wbsedcl.trms.kafka.substation.log.avro.model.CreatedFeederAvroModel.Builder(other);
    }
  }

  /**
   * Creates a new CreatedFeederAvroModel RecordBuilder by copying an existing CreatedFeederAvroModel instance.
   * @param other The existing instance to copy.
   * @return A new CreatedFeederAvroModel RecordBuilder
   */
  public static com.wbsedcl.trms.kafka.substation.log.avro.model.CreatedFeederAvroModel.Builder newBuilder(com.wbsedcl.trms.kafka.substation.log.avro.model.CreatedFeederAvroModel other) {
    if (other == null) {
      return new com.wbsedcl.trms.kafka.substation.log.avro.model.CreatedFeederAvroModel.Builder();
    } else {
      return new com.wbsedcl.trms.kafka.substation.log.avro.model.CreatedFeederAvroModel.Builder(other);
    }
  }

  /**
   * RecordBuilder for CreatedFeederAvroModel instances.
   */
  @org.apache.avro.specific.AvroGenerated
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<CreatedFeederAvroModel>
    implements org.apache.avro.data.RecordBuilder<CreatedFeederAvroModel> {

    private java.lang.String feederId;
    private java.lang.String feederName;
    private java.lang.String energyMeterNo;
    private java.lang.String substationOfficeId;
    private int voltageLevel;
    private com.wbsedcl.trms.kafka.substation.log.avro.model.FeederType feederType;
    private java.util.UUID sagaId;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$, MODEL$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(com.wbsedcl.trms.kafka.substation.log.avro.model.CreatedFeederAvroModel.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.feederId)) {
        this.feederId = data().deepCopy(fields()[0].schema(), other.feederId);
        fieldSetFlags()[0] = other.fieldSetFlags()[0];
      }
      if (isValidValue(fields()[1], other.feederName)) {
        this.feederName = data().deepCopy(fields()[1].schema(), other.feederName);
        fieldSetFlags()[1] = other.fieldSetFlags()[1];
      }
      if (isValidValue(fields()[2], other.energyMeterNo)) {
        this.energyMeterNo = data().deepCopy(fields()[2].schema(), other.energyMeterNo);
        fieldSetFlags()[2] = other.fieldSetFlags()[2];
      }
      if (isValidValue(fields()[3], other.substationOfficeId)) {
        this.substationOfficeId = data().deepCopy(fields()[3].schema(), other.substationOfficeId);
        fieldSetFlags()[3] = other.fieldSetFlags()[3];
      }
      if (isValidValue(fields()[4], other.voltageLevel)) {
        this.voltageLevel = data().deepCopy(fields()[4].schema(), other.voltageLevel);
        fieldSetFlags()[4] = other.fieldSetFlags()[4];
      }
      if (isValidValue(fields()[5], other.feederType)) {
        this.feederType = data().deepCopy(fields()[5].schema(), other.feederType);
        fieldSetFlags()[5] = other.fieldSetFlags()[5];
      }
      if (isValidValue(fields()[6], other.sagaId)) {
        this.sagaId = data().deepCopy(fields()[6].schema(), other.sagaId);
        fieldSetFlags()[6] = other.fieldSetFlags()[6];
      }
    }

    /**
     * Creates a Builder by copying an existing CreatedFeederAvroModel instance
     * @param other The existing instance to copy.
     */
    private Builder(com.wbsedcl.trms.kafka.substation.log.avro.model.CreatedFeederAvroModel other) {
      super(SCHEMA$, MODEL$);
      if (isValidValue(fields()[0], other.feederId)) {
        this.feederId = data().deepCopy(fields()[0].schema(), other.feederId);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.feederName)) {
        this.feederName = data().deepCopy(fields()[1].schema(), other.feederName);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.energyMeterNo)) {
        this.energyMeterNo = data().deepCopy(fields()[2].schema(), other.energyMeterNo);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.substationOfficeId)) {
        this.substationOfficeId = data().deepCopy(fields()[3].schema(), other.substationOfficeId);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.voltageLevel)) {
        this.voltageLevel = data().deepCopy(fields()[4].schema(), other.voltageLevel);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.feederType)) {
        this.feederType = data().deepCopy(fields()[5].schema(), other.feederType);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.sagaId)) {
        this.sagaId = data().deepCopy(fields()[6].schema(), other.sagaId);
        fieldSetFlags()[6] = true;
      }
    }

    /**
      * Gets the value of the 'feederId' field.
      * @return The value.
      */
    public java.lang.String getFeederId() {
      return feederId;
    }


    /**
      * Sets the value of the 'feederId' field.
      * @param value The value of 'feederId'.
      * @return This builder.
      */
    public com.wbsedcl.trms.kafka.substation.log.avro.model.CreatedFeederAvroModel.Builder setFeederId(java.lang.String value) {
      validate(fields()[0], value);
      this.feederId = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'feederId' field has been set.
      * @return True if the 'feederId' field has been set, false otherwise.
      */
    public boolean hasFeederId() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'feederId' field.
      * @return This builder.
      */
    public com.wbsedcl.trms.kafka.substation.log.avro.model.CreatedFeederAvroModel.Builder clearFeederId() {
      feederId = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'feederName' field.
      * @return The value.
      */
    public java.lang.String getFeederName() {
      return feederName;
    }


    /**
      * Sets the value of the 'feederName' field.
      * @param value The value of 'feederName'.
      * @return This builder.
      */
    public com.wbsedcl.trms.kafka.substation.log.avro.model.CreatedFeederAvroModel.Builder setFeederName(java.lang.String value) {
      validate(fields()[1], value);
      this.feederName = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'feederName' field has been set.
      * @return True if the 'feederName' field has been set, false otherwise.
      */
    public boolean hasFeederName() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'feederName' field.
      * @return This builder.
      */
    public com.wbsedcl.trms.kafka.substation.log.avro.model.CreatedFeederAvroModel.Builder clearFeederName() {
      feederName = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'energyMeterNo' field.
      * @return The value.
      */
    public java.lang.String getEnergyMeterNo() {
      return energyMeterNo;
    }


    /**
      * Sets the value of the 'energyMeterNo' field.
      * @param value The value of 'energyMeterNo'.
      * @return This builder.
      */
    public com.wbsedcl.trms.kafka.substation.log.avro.model.CreatedFeederAvroModel.Builder setEnergyMeterNo(java.lang.String value) {
      validate(fields()[2], value);
      this.energyMeterNo = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'energyMeterNo' field has been set.
      * @return True if the 'energyMeterNo' field has been set, false otherwise.
      */
    public boolean hasEnergyMeterNo() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'energyMeterNo' field.
      * @return This builder.
      */
    public com.wbsedcl.trms.kafka.substation.log.avro.model.CreatedFeederAvroModel.Builder clearEnergyMeterNo() {
      energyMeterNo = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'substationOfficeId' field.
      * @return The value.
      */
    public java.lang.String getSubstationOfficeId() {
      return substationOfficeId;
    }


    /**
      * Sets the value of the 'substationOfficeId' field.
      * @param value The value of 'substationOfficeId'.
      * @return This builder.
      */
    public com.wbsedcl.trms.kafka.substation.log.avro.model.CreatedFeederAvroModel.Builder setSubstationOfficeId(java.lang.String value) {
      validate(fields()[3], value);
      this.substationOfficeId = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'substationOfficeId' field has been set.
      * @return True if the 'substationOfficeId' field has been set, false otherwise.
      */
    public boolean hasSubstationOfficeId() {
      return fieldSetFlags()[3];
    }


    /**
      * Clears the value of the 'substationOfficeId' field.
      * @return This builder.
      */
    public com.wbsedcl.trms.kafka.substation.log.avro.model.CreatedFeederAvroModel.Builder clearSubstationOfficeId() {
      substationOfficeId = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    /**
      * Gets the value of the 'voltageLevel' field.
      * @return The value.
      */
    public int getVoltageLevel() {
      return voltageLevel;
    }


    /**
      * Sets the value of the 'voltageLevel' field.
      * @param value The value of 'voltageLevel'.
      * @return This builder.
      */
    public com.wbsedcl.trms.kafka.substation.log.avro.model.CreatedFeederAvroModel.Builder setVoltageLevel(int value) {
      validate(fields()[4], value);
      this.voltageLevel = value;
      fieldSetFlags()[4] = true;
      return this;
    }

    /**
      * Checks whether the 'voltageLevel' field has been set.
      * @return True if the 'voltageLevel' field has been set, false otherwise.
      */
    public boolean hasVoltageLevel() {
      return fieldSetFlags()[4];
    }


    /**
      * Clears the value of the 'voltageLevel' field.
      * @return This builder.
      */
    public com.wbsedcl.trms.kafka.substation.log.avro.model.CreatedFeederAvroModel.Builder clearVoltageLevel() {
      fieldSetFlags()[4] = false;
      return this;
    }

    /**
      * Gets the value of the 'feederType' field.
      * @return The value.
      */
    public com.wbsedcl.trms.kafka.substation.log.avro.model.FeederType getFeederType() {
      return feederType;
    }


    /**
      * Sets the value of the 'feederType' field.
      * @param value The value of 'feederType'.
      * @return This builder.
      */
    public com.wbsedcl.trms.kafka.substation.log.avro.model.CreatedFeederAvroModel.Builder setFeederType(com.wbsedcl.trms.kafka.substation.log.avro.model.FeederType value) {
      validate(fields()[5], value);
      this.feederType = value;
      fieldSetFlags()[5] = true;
      return this;
    }

    /**
      * Checks whether the 'feederType' field has been set.
      * @return True if the 'feederType' field has been set, false otherwise.
      */
    public boolean hasFeederType() {
      return fieldSetFlags()[5];
    }


    /**
      * Clears the value of the 'feederType' field.
      * @return This builder.
      */
    public com.wbsedcl.trms.kafka.substation.log.avro.model.CreatedFeederAvroModel.Builder clearFeederType() {
      feederType = null;
      fieldSetFlags()[5] = false;
      return this;
    }

    /**
      * Gets the value of the 'sagaId' field.
      * @return The value.
      */
    public java.util.UUID getSagaId() {
      return sagaId;
    }


    /**
      * Sets the value of the 'sagaId' field.
      * @param value The value of 'sagaId'.
      * @return This builder.
      */
    public com.wbsedcl.trms.kafka.substation.log.avro.model.CreatedFeederAvroModel.Builder setSagaId(java.util.UUID value) {
      validate(fields()[6], value);
      this.sagaId = value;
      fieldSetFlags()[6] = true;
      return this;
    }

    /**
      * Checks whether the 'sagaId' field has been set.
      * @return True if the 'sagaId' field has been set, false otherwise.
      */
    public boolean hasSagaId() {
      return fieldSetFlags()[6];
    }


    /**
      * Clears the value of the 'sagaId' field.
      * @return This builder.
      */
    public com.wbsedcl.trms.kafka.substation.log.avro.model.CreatedFeederAvroModel.Builder clearSagaId() {
      sagaId = null;
      fieldSetFlags()[6] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public CreatedFeederAvroModel build() {
      try {
        CreatedFeederAvroModel record = new CreatedFeederAvroModel();
        record.feederId = fieldSetFlags()[0] ? this.feederId : (java.lang.String) defaultValue(fields()[0]);
        record.feederName = fieldSetFlags()[1] ? this.feederName : (java.lang.String) defaultValue(fields()[1]);
        record.energyMeterNo = fieldSetFlags()[2] ? this.energyMeterNo : (java.lang.String) defaultValue(fields()[2]);
        record.substationOfficeId = fieldSetFlags()[3] ? this.substationOfficeId : (java.lang.String) defaultValue(fields()[3]);
        record.voltageLevel = fieldSetFlags()[4] ? this.voltageLevel : (java.lang.Integer) defaultValue(fields()[4]);
        record.feederType = fieldSetFlags()[5] ? this.feederType : (com.wbsedcl.trms.kafka.substation.log.avro.model.FeederType) defaultValue(fields()[5]);
        record.sagaId = fieldSetFlags()[6] ? this.sagaId : (java.util.UUID) defaultValue(fields()[6]);
        return record;
      } catch (org.apache.avro.AvroMissingFieldException e) {
        throw e;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<CreatedFeederAvroModel>
    WRITER$ = (org.apache.avro.io.DatumWriter<CreatedFeederAvroModel>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<CreatedFeederAvroModel>
    READER$ = (org.apache.avro.io.DatumReader<CreatedFeederAvroModel>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

}










