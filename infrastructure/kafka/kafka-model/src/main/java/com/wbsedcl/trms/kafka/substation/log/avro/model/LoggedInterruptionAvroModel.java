/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package com.wbsedcl.trms.kafka.substation.log.avro.model;

import org.apache.avro.generic.GenericArray;
import org.apache.avro.specific.SpecificData;
import org.apache.avro.util.Utf8;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

@org.apache.avro.specific.AvroGenerated
public class LoggedInterruptionAvroModel extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = 5474994396463081543L;


  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"LoggedInterruptionAvroModel\",\"namespace\":\"com.wbsedcl.trms.kafka.substation.log.avro.model\",\"fields\":[{\"name\":\"interruptionId\",\"type\":{\"type\":\"string\",\"logicalType\":\"uuid\"}},{\"name\":\"sagaId\",\"type\":{\"type\":\"string\",\"logicalType\":\"uuid\"}},{\"name\":\"faultyFeederId\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"substationOfficeId\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"interruptionType\",\"type\":{\"type\":\"enum\",\"name\":\"InterruptionType\",\"symbols\":[\"TRANSIENT_TRIPPING\",\"MAIN_POWER_FAIL\",\"LOAD_SHEDDING\",\"PLANNED_SHUTDOWN\",\"EMERGENCY_SHUTDOWN\",\"SUSTAINED_FAULT\",\"SOURCE_CHANGEOVER\"]}},{\"name\":\"faultNature\",\"type\":[\"null\",{\"type\":\"enum\",\"name\":\"FaultNature\",\"symbols\":[\"EF_OC\",\"EF\",\"OC\",\"HIGH_SET_OC\"]}]},{\"name\":\"createdBy\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"startDate\",\"type\":{\"type\":\"int\",\"logicalType\":\"date\"}},{\"name\":\"startTime\",\"type\":{\"type\":\"long\",\"logicalType\":\"time-millis\"}},{\"name\":\"restoredBy\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"interruptionStatus\",\"type\":{\"type\":\"enum\",\"name\":\"InterruptionStatus\",\"symbols\":[\"NOT_RESTORED\",\"RESTORED\"]}},{\"name\":\"cause\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}]},{\"name\":\"endDate\",\"type\":[{\"type\":\"int\",\"logicalType\":\"date\"},\"null\"]},{\"name\":\"endTime\",\"type\":[{\"type\":\"long\",\"logicalType\":\"time-millis\"},\"null\"]}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static final SpecificData MODEL$ = new SpecificData();
  static {
    MODEL$.addLogicalTypeConversion(new org.apache.avro.data.TimeConversions.DateConversion());
    MODEL$.addLogicalTypeConversion(new org.apache.avro.Conversions.UUIDConversion());
  }

  private static final BinaryMessageEncoder<LoggedInterruptionAvroModel> ENCODER =
      new BinaryMessageEncoder<>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<LoggedInterruptionAvroModel> DECODER =
      new BinaryMessageDecoder<>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageEncoder instance used by this class.
   * @return the message encoder used by this class
   */
  public static BinaryMessageEncoder<LoggedInterruptionAvroModel> getEncoder() {
    return ENCODER;
  }

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   * @return the message decoder used by this class
   */
  public static BinaryMessageDecoder<LoggedInterruptionAvroModel> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   * @return a BinaryMessageDecoder instance for this class backed by the given SchemaStore
   */
  public static BinaryMessageDecoder<LoggedInterruptionAvroModel> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<>(MODEL$, SCHEMA$, resolver);
  }

  /**
   * Serializes this LoggedInterruptionAvroModel to a ByteBuffer.
   * @return a buffer holding the serialized data for this instance
   * @throws java.io.IOException if this instance could not be serialized
   */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /**
   * Deserializes a LoggedInterruptionAvroModel from a ByteBuffer.
   * @param b a byte buffer holding serialized data for an instance of this class
   * @return a LoggedInterruptionAvroModel instance decoded from the given buffer
   * @throws java.io.IOException if the given bytes could not be deserialized into an instance of this class
   */
  public static LoggedInterruptionAvroModel fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

  private java.util.UUID interruptionId;
  private java.util.UUID sagaId;
  private java.lang.String faultyFeederId;
  private java.lang.String substationOfficeId;
  private com.wbsedcl.trms.kafka.substation.log.avro.model.InterruptionType interruptionType;
  private com.wbsedcl.trms.kafka.substation.log.avro.model.FaultNature faultNature;
  private java.lang.String createdBy;
  private java.time.LocalDate startDate;
  private long startTime;
  private java.lang.String restoredBy;
  private com.wbsedcl.trms.kafka.substation.log.avro.model.InterruptionStatus interruptionStatus;
  private java.lang.String cause;
  private java.time.LocalDate endDate;
  private java.lang.Long endTime;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public LoggedInterruptionAvroModel() {}

  /**
   * All-args constructor.
   * @param interruptionId The new value for interruptionId
   * @param sagaId The new value for sagaId
   * @param faultyFeederId The new value for faultyFeederId
   * @param substationOfficeId The new value for substationOfficeId
   * @param interruptionType The new value for interruptionType
   * @param faultNature The new value for faultNature
   * @param createdBy The new value for createdBy
   * @param startDate The new value for startDate
   * @param startTime The new value for startTime
   * @param restoredBy The new value for restoredBy
   * @param interruptionStatus The new value for interruptionStatus
   * @param cause The new value for cause
   * @param endDate The new value for endDate
   * @param endTime The new value for endTime
   */
  public LoggedInterruptionAvroModel(java.util.UUID interruptionId, java.util.UUID sagaId, java.lang.String faultyFeederId, java.lang.String substationOfficeId, com.wbsedcl.trms.kafka.substation.log.avro.model.InterruptionType interruptionType, com.wbsedcl.trms.kafka.substation.log.avro.model.FaultNature faultNature, java.lang.String createdBy, java.time.LocalDate startDate, java.lang.Long startTime, java.lang.String restoredBy, com.wbsedcl.trms.kafka.substation.log.avro.model.InterruptionStatus interruptionStatus, java.lang.String cause, java.time.LocalDate endDate, java.lang.Long endTime) {
    this.interruptionId = interruptionId;
    this.sagaId = sagaId;
    this.faultyFeederId = faultyFeederId;
    this.substationOfficeId = substationOfficeId;
    this.interruptionType = interruptionType;
    this.faultNature = faultNature;
    this.createdBy = createdBy;
    this.startDate = startDate;
    this.startTime = startTime;
    this.restoredBy = restoredBy;
    this.interruptionStatus = interruptionStatus;
    this.cause = cause;
    this.endDate = endDate;
    this.endTime = endTime;
  }

  @Override
  public org.apache.avro.specific.SpecificData getSpecificData() { return MODEL$; }

  @Override
  public org.apache.avro.Schema getSchema() { return SCHEMA$; }

  // Used by DatumWriter.  Applications should not call.
  @Override
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return interruptionId;
    case 1: return sagaId;
    case 2: return faultyFeederId;
    case 3: return substationOfficeId;
    case 4: return interruptionType;
    case 5: return faultNature;
    case 6: return createdBy;
    case 7: return startDate;
    case 8: return startTime;
    case 9: return restoredBy;
    case 10: return interruptionStatus;
    case 11: return cause;
    case 12: return endDate;
    case 13: return endTime;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  private static final org.apache.avro.Conversion<?>[] conversions =
      new org.apache.avro.Conversion<?>[] {
      new org.apache.avro.Conversions.UUIDConversion(),
      new org.apache.avro.Conversions.UUIDConversion(),
      null,
      null,
      null,
      null,
      null,
      new org.apache.avro.data.TimeConversions.DateConversion(),
      null,
      null,
      null,
      null,
      null,
      null,
      null
  };

  @Override
  public org.apache.avro.Conversion<?> getConversion(int field) {
    return conversions[field];
  }

  // Used by DatumReader.  Applications should not call.
  @Override
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: interruptionId = (java.util.UUID)value$; break;
    case 1: sagaId = (java.util.UUID)value$; break;
    case 2: faultyFeederId = value$ != null ? value$.toString() : null; break;
    case 3: substationOfficeId = value$ != null ? value$.toString() : null; break;
    case 4: interruptionType = (com.wbsedcl.trms.kafka.substation.log.avro.model.InterruptionType)value$; break;
    case 5: faultNature = (com.wbsedcl.trms.kafka.substation.log.avro.model.FaultNature)value$; break;
    case 6: createdBy = value$ != null ? value$.toString() : null; break;
    case 7: startDate = (java.time.LocalDate)value$; break;
    case 8: startTime = (java.lang.Long)value$; break;
    case 9: restoredBy = value$ != null ? value$.toString() : null; break;
    case 10: interruptionStatus = (com.wbsedcl.trms.kafka.substation.log.avro.model.InterruptionStatus)value$; break;
    case 11: cause = value$ != null ? value$.toString() : null; break;
    case 12: endDate = (java.time.LocalDate)value$; break;
    case 13: endTime = (java.lang.Long)value$; break;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  /**
   * Gets the value of the 'interruptionId' field.
   * @return The value of the 'interruptionId' field.
   */
  public java.util.UUID getInterruptionId() {
    return interruptionId;
  }


  /**
   * Sets the value of the 'interruptionId' field.
   * @param value the value to set.
   */
  public void setInterruptionId(java.util.UUID value) {
    this.interruptionId = value;
  }

  /**
   * Gets the value of the 'sagaId' field.
   * @return The value of the 'sagaId' field.
   */
  public java.util.UUID getSagaId() {
    return sagaId;
  }


  /**
   * Sets the value of the 'sagaId' field.
   * @param value the value to set.
   */
  public void setSagaId(java.util.UUID value) {
    this.sagaId = value;
  }

  /**
   * Gets the value of the 'faultyFeederId' field.
   * @return The value of the 'faultyFeederId' field.
   */
  public java.lang.String getFaultyFeederId() {
    return faultyFeederId;
  }


  /**
   * Sets the value of the 'faultyFeederId' field.
   * @param value the value to set.
   */
  public void setFaultyFeederId(java.lang.String value) {
    this.faultyFeederId = value;
  }

  /**
   * Gets the value of the 'substationOfficeId' field.
   * @return The value of the 'substationOfficeId' field.
   */
  public java.lang.String getSubstationOfficeId() {
    return substationOfficeId;
  }


  /**
   * Sets the value of the 'substationOfficeId' field.
   * @param value the value to set.
   */
  public void setSubstationOfficeId(java.lang.String value) {
    this.substationOfficeId = value;
  }

  /**
   * Gets the value of the 'interruptionType' field.
   * @return The value of the 'interruptionType' field.
   */
  public com.wbsedcl.trms.kafka.substation.log.avro.model.InterruptionType getInterruptionType() {
    return interruptionType;
  }


  /**
   * Sets the value of the 'interruptionType' field.
   * @param value the value to set.
   */
  public void setInterruptionType(com.wbsedcl.trms.kafka.substation.log.avro.model.InterruptionType value) {
    this.interruptionType = value;
  }

  /**
   * Gets the value of the 'faultNature' field.
   * @return The value of the 'faultNature' field.
   */
  public com.wbsedcl.trms.kafka.substation.log.avro.model.FaultNature getFaultNature() {
    return faultNature;
  }


  /**
   * Sets the value of the 'faultNature' field.
   * @param value the value to set.
   */
  public void setFaultNature(com.wbsedcl.trms.kafka.substation.log.avro.model.FaultNature value) {
    this.faultNature = value;
  }

  /**
   * Gets the value of the 'createdBy' field.
   * @return The value of the 'createdBy' field.
   */
  public java.lang.String getCreatedBy() {
    return createdBy;
  }


  /**
   * Sets the value of the 'createdBy' field.
   * @param value the value to set.
   */
  public void setCreatedBy(java.lang.String value) {
    this.createdBy = value;
  }

  /**
   * Gets the value of the 'startDate' field.
   * @return The value of the 'startDate' field.
   */
  public java.time.LocalDate getStartDate() {
    return startDate;
  }


  /**
   * Sets the value of the 'startDate' field.
   * @param value the value to set.
   */
  public void setStartDate(java.time.LocalDate value) {
    this.startDate = value;
  }

  /**
   * Gets the value of the 'startTime' field.
   * @return The value of the 'startTime' field.
   */
  public long getStartTime() {
    return startTime;
  }


  /**
   * Sets the value of the 'startTime' field.
   * @param value the value to set.
   */
  public void setStartTime(long value) {
    this.startTime = value;
  }

  /**
   * Gets the value of the 'restoredBy' field.
   * @return The value of the 'restoredBy' field.
   */
  public java.lang.String getRestoredBy() {
    return restoredBy;
  }


  /**
   * Sets the value of the 'restoredBy' field.
   * @param value the value to set.
   */
  public void setRestoredBy(java.lang.String value) {
    this.restoredBy = value;
  }

  /**
   * Gets the value of the 'interruptionStatus' field.
   * @return The value of the 'interruptionStatus' field.
   */
  public com.wbsedcl.trms.kafka.substation.log.avro.model.InterruptionStatus getInterruptionStatus() {
    return interruptionStatus;
  }


  /**
   * Sets the value of the 'interruptionStatus' field.
   * @param value the value to set.
   */
  public void setInterruptionStatus(com.wbsedcl.trms.kafka.substation.log.avro.model.InterruptionStatus value) {
    this.interruptionStatus = value;
  }

  /**
   * Gets the value of the 'cause' field.
   * @return The value of the 'cause' field.
   */
  public java.lang.String getCause() {
    return cause;
  }


  /**
   * Sets the value of the 'cause' field.
   * @param value the value to set.
   */
  public void setCause(java.lang.String value) {
    this.cause = value;
  }

  /**
   * Gets the value of the 'endDate' field.
   * @return The value of the 'endDate' field.
   */
  public java.time.LocalDate getEndDate() {
    return endDate;
  }


  /**
   * Sets the value of the 'endDate' field.
   * @param value the value to set.
   */
  public void setEndDate(java.time.LocalDate value) {
    this.endDate = value;
  }

  /**
   * Gets the value of the 'endTime' field.
   * @return The value of the 'endTime' field.
   */
  public java.lang.Long getEndTime() {
    return endTime;
  }


  /**
   * Sets the value of the 'endTime' field.
   * @param value the value to set.
   */
  public void setEndTime(java.lang.Long value) {
    this.endTime = value;
  }

  /**
   * Creates a new LoggedInterruptionAvroModel RecordBuilder.
   * @return A new LoggedInterruptionAvroModel RecordBuilder
   */
  public static com.wbsedcl.trms.kafka.substation.log.avro.model.LoggedInterruptionAvroModel.Builder newBuilder() {
    return new com.wbsedcl.trms.kafka.substation.log.avro.model.LoggedInterruptionAvroModel.Builder();
  }

  /**
   * Creates a new LoggedInterruptionAvroModel RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new LoggedInterruptionAvroModel RecordBuilder
   */
  public static com.wbsedcl.trms.kafka.substation.log.avro.model.LoggedInterruptionAvroModel.Builder newBuilder(com.wbsedcl.trms.kafka.substation.log.avro.model.LoggedInterruptionAvroModel.Builder other) {
    if (other == null) {
      return new com.wbsedcl.trms.kafka.substation.log.avro.model.LoggedInterruptionAvroModel.Builder();
    } else {
      return new com.wbsedcl.trms.kafka.substation.log.avro.model.LoggedInterruptionAvroModel.Builder(other);
    }
  }

  /**
   * Creates a new LoggedInterruptionAvroModel RecordBuilder by copying an existing LoggedInterruptionAvroModel instance.
   * @param other The existing instance to copy.
   * @return A new LoggedInterruptionAvroModel RecordBuilder
   */
  public static com.wbsedcl.trms.kafka.substation.log.avro.model.LoggedInterruptionAvroModel.Builder newBuilder(com.wbsedcl.trms.kafka.substation.log.avro.model.LoggedInterruptionAvroModel other) {
    if (other == null) {
      return new com.wbsedcl.trms.kafka.substation.log.avro.model.LoggedInterruptionAvroModel.Builder();
    } else {
      return new com.wbsedcl.trms.kafka.substation.log.avro.model.LoggedInterruptionAvroModel.Builder(other);
    }
  }

  /**
   * RecordBuilder for LoggedInterruptionAvroModel instances.
   */
  @org.apache.avro.specific.AvroGenerated
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<LoggedInterruptionAvroModel>
    implements org.apache.avro.data.RecordBuilder<LoggedInterruptionAvroModel> {

    private java.util.UUID interruptionId;
    private java.util.UUID sagaId;
    private java.lang.String faultyFeederId;
    private java.lang.String substationOfficeId;
    private com.wbsedcl.trms.kafka.substation.log.avro.model.InterruptionType interruptionType;
    private com.wbsedcl.trms.kafka.substation.log.avro.model.FaultNature faultNature;
    private java.lang.String createdBy;
    private java.time.LocalDate startDate;
    private long startTime;
    private java.lang.String restoredBy;
    private com.wbsedcl.trms.kafka.substation.log.avro.model.InterruptionStatus interruptionStatus;
    private java.lang.String cause;
    private java.time.LocalDate endDate;
    private java.lang.Long endTime;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$, MODEL$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(com.wbsedcl.trms.kafka.substation.log.avro.model.LoggedInterruptionAvroModel.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.interruptionId)) {
        this.interruptionId = data().deepCopy(fields()[0].schema(), other.interruptionId);
        fieldSetFlags()[0] = other.fieldSetFlags()[0];
      }
      if (isValidValue(fields()[1], other.sagaId)) {
        this.sagaId = data().deepCopy(fields()[1].schema(), other.sagaId);
        fieldSetFlags()[1] = other.fieldSetFlags()[1];
      }
      if (isValidValue(fields()[2], other.faultyFeederId)) {
        this.faultyFeederId = data().deepCopy(fields()[2].schema(), other.faultyFeederId);
        fieldSetFlags()[2] = other.fieldSetFlags()[2];
      }
      if (isValidValue(fields()[3], other.substationOfficeId)) {
        this.substationOfficeId = data().deepCopy(fields()[3].schema(), other.substationOfficeId);
        fieldSetFlags()[3] = other.fieldSetFlags()[3];
      }
      if (isValidValue(fields()[4], other.interruptionType)) {
        this.interruptionType = data().deepCopy(fields()[4].schema(), other.interruptionType);
        fieldSetFlags()[4] = other.fieldSetFlags()[4];
      }
      if (isValidValue(fields()[5], other.faultNature)) {
        this.faultNature = data().deepCopy(fields()[5].schema(), other.faultNature);
        fieldSetFlags()[5] = other.fieldSetFlags()[5];
      }
      if (isValidValue(fields()[6], other.createdBy)) {
        this.createdBy = data().deepCopy(fields()[6].schema(), other.createdBy);
        fieldSetFlags()[6] = other.fieldSetFlags()[6];
      }
      if (isValidValue(fields()[7], other.startDate)) {
        this.startDate = data().deepCopy(fields()[7].schema(), other.startDate);
        fieldSetFlags()[7] = other.fieldSetFlags()[7];
      }
      if (isValidValue(fields()[8], other.startTime)) {
        this.startTime = data().deepCopy(fields()[8].schema(), other.startTime);
        fieldSetFlags()[8] = other.fieldSetFlags()[8];
      }
      if (isValidValue(fields()[9], other.restoredBy)) {
        this.restoredBy = data().deepCopy(fields()[9].schema(), other.restoredBy);
        fieldSetFlags()[9] = other.fieldSetFlags()[9];
      }
      if (isValidValue(fields()[10], other.interruptionStatus)) {
        this.interruptionStatus = data().deepCopy(fields()[10].schema(), other.interruptionStatus);
        fieldSetFlags()[10] = other.fieldSetFlags()[10];
      }
      if (isValidValue(fields()[11], other.cause)) {
        this.cause = data().deepCopy(fields()[11].schema(), other.cause);
        fieldSetFlags()[11] = other.fieldSetFlags()[11];
      }
      if (isValidValue(fields()[12], other.endDate)) {
        this.endDate = data().deepCopy(fields()[12].schema(), other.endDate);
        fieldSetFlags()[12] = other.fieldSetFlags()[12];
      }
      if (isValidValue(fields()[13], other.endTime)) {
        this.endTime = data().deepCopy(fields()[13].schema(), other.endTime);
        fieldSetFlags()[13] = other.fieldSetFlags()[13];
      }
    }

    /**
     * Creates a Builder by copying an existing LoggedInterruptionAvroModel instance
     * @param other The existing instance to copy.
     */
    private Builder(com.wbsedcl.trms.kafka.substation.log.avro.model.LoggedInterruptionAvroModel other) {
      super(SCHEMA$, MODEL$);
      if (isValidValue(fields()[0], other.interruptionId)) {
        this.interruptionId = data().deepCopy(fields()[0].schema(), other.interruptionId);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.sagaId)) {
        this.sagaId = data().deepCopy(fields()[1].schema(), other.sagaId);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.faultyFeederId)) {
        this.faultyFeederId = data().deepCopy(fields()[2].schema(), other.faultyFeederId);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.substationOfficeId)) {
        this.substationOfficeId = data().deepCopy(fields()[3].schema(), other.substationOfficeId);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.interruptionType)) {
        this.interruptionType = data().deepCopy(fields()[4].schema(), other.interruptionType);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.faultNature)) {
        this.faultNature = data().deepCopy(fields()[5].schema(), other.faultNature);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.createdBy)) {
        this.createdBy = data().deepCopy(fields()[6].schema(), other.createdBy);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.startDate)) {
        this.startDate = data().deepCopy(fields()[7].schema(), other.startDate);
        fieldSetFlags()[7] = true;
      }
      if (isValidValue(fields()[8], other.startTime)) {
        this.startTime = data().deepCopy(fields()[8].schema(), other.startTime);
        fieldSetFlags()[8] = true;
      }
      if (isValidValue(fields()[9], other.restoredBy)) {
        this.restoredBy = data().deepCopy(fields()[9].schema(), other.restoredBy);
        fieldSetFlags()[9] = true;
      }
      if (isValidValue(fields()[10], other.interruptionStatus)) {
        this.interruptionStatus = data().deepCopy(fields()[10].schema(), other.interruptionStatus);
        fieldSetFlags()[10] = true;
      }
      if (isValidValue(fields()[11], other.cause)) {
        this.cause = data().deepCopy(fields()[11].schema(), other.cause);
        fieldSetFlags()[11] = true;
      }
      if (isValidValue(fields()[12], other.endDate)) {
        this.endDate = data().deepCopy(fields()[12].schema(), other.endDate);
        fieldSetFlags()[12] = true;
      }
      if (isValidValue(fields()[13], other.endTime)) {
        this.endTime = data().deepCopy(fields()[13].schema(), other.endTime);
        fieldSetFlags()[13] = true;
      }
    }

    /**
      * Gets the value of the 'interruptionId' field.
      * @return The value.
      */
    public java.util.UUID getInterruptionId() {
      return interruptionId;
    }


    /**
      * Sets the value of the 'interruptionId' field.
      * @param value The value of 'interruptionId'.
      * @return This builder.
      */
    public com.wbsedcl.trms.kafka.substation.log.avro.model.LoggedInterruptionAvroModel.Builder setInterruptionId(java.util.UUID value) {
      validate(fields()[0], value);
      this.interruptionId = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'interruptionId' field has been set.
      * @return True if the 'interruptionId' field has been set, false otherwise.
      */
    public boolean hasInterruptionId() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'interruptionId' field.
      * @return This builder.
      */
    public com.wbsedcl.trms.kafka.substation.log.avro.model.LoggedInterruptionAvroModel.Builder clearInterruptionId() {
      interruptionId = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'sagaId' field.
      * @return The value.
      */
    public java.util.UUID getSagaId() {
      return sagaId;
    }


    /**
      * Sets the value of the 'sagaId' field.
      * @param value The value of 'sagaId'.
      * @return This builder.
      */
    public com.wbsedcl.trms.kafka.substation.log.avro.model.LoggedInterruptionAvroModel.Builder setSagaId(java.util.UUID value) {
      validate(fields()[1], value);
      this.sagaId = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'sagaId' field has been set.
      * @return True if the 'sagaId' field has been set, false otherwise.
      */
    public boolean hasSagaId() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'sagaId' field.
      * @return This builder.
      */
    public com.wbsedcl.trms.kafka.substation.log.avro.model.LoggedInterruptionAvroModel.Builder clearSagaId() {
      sagaId = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'faultyFeederId' field.
      * @return The value.
      */
    public java.lang.String getFaultyFeederId() {
      return faultyFeederId;
    }


    /**
      * Sets the value of the 'faultyFeederId' field.
      * @param value The value of 'faultyFeederId'.
      * @return This builder.
      */
    public com.wbsedcl.trms.kafka.substation.log.avro.model.LoggedInterruptionAvroModel.Builder setFaultyFeederId(java.lang.String value) {
      validate(fields()[2], value);
      this.faultyFeederId = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'faultyFeederId' field has been set.
      * @return True if the 'faultyFeederId' field has been set, false otherwise.
      */
    public boolean hasFaultyFeederId() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'faultyFeederId' field.
      * @return This builder.
      */
    public com.wbsedcl.trms.kafka.substation.log.avro.model.LoggedInterruptionAvroModel.Builder clearFaultyFeederId() {
      faultyFeederId = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'substationOfficeId' field.
      * @return The value.
      */
    public java.lang.String getSubstationOfficeId() {
      return substationOfficeId;
    }


    /**
      * Sets the value of the 'substationOfficeId' field.
      * @param value The value of 'substationOfficeId'.
      * @return This builder.
      */
    public com.wbsedcl.trms.kafka.substation.log.avro.model.LoggedInterruptionAvroModel.Builder setSubstationOfficeId(java.lang.String value) {
      validate(fields()[3], value);
      this.substationOfficeId = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'substationOfficeId' field has been set.
      * @return True if the 'substationOfficeId' field has been set, false otherwise.
      */
    public boolean hasSubstationOfficeId() {
      return fieldSetFlags()[3];
    }


    /**
      * Clears the value of the 'substationOfficeId' field.
      * @return This builder.
      */
    public com.wbsedcl.trms.kafka.substation.log.avro.model.LoggedInterruptionAvroModel.Builder clearSubstationOfficeId() {
      substationOfficeId = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    /**
      * Gets the value of the 'interruptionType' field.
      * @return The value.
      */
    public com.wbsedcl.trms.kafka.substation.log.avro.model.InterruptionType getInterruptionType() {
      return interruptionType;
    }


    /**
      * Sets the value of the 'interruptionType' field.
      * @param value The value of 'interruptionType'.
      * @return This builder.
      */
    public com.wbsedcl.trms.kafka.substation.log.avro.model.LoggedInterruptionAvroModel.Builder setInterruptionType(com.wbsedcl.trms.kafka.substation.log.avro.model.InterruptionType value) {
      validate(fields()[4], value);
      this.interruptionType = value;
      fieldSetFlags()[4] = true;
      return this;
    }

    /**
      * Checks whether the 'interruptionType' field has been set.
      * @return True if the 'interruptionType' field has been set, false otherwise.
      */
    public boolean hasInterruptionType() {
      return fieldSetFlags()[4];
    }


    /**
      * Clears the value of the 'interruptionType' field.
      * @return This builder.
      */
    public com.wbsedcl.trms.kafka.substation.log.avro.model.LoggedInterruptionAvroModel.Builder clearInterruptionType() {
      interruptionType = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    /**
      * Gets the value of the 'faultNature' field.
      * @return The value.
      */
    public com.wbsedcl.trms.kafka.substation.log.avro.model.FaultNature getFaultNature() {
      return faultNature;
    }


    /**
      * Sets the value of the 'faultNature' field.
      * @param value The value of 'faultNature'.
      * @return This builder.
      */
    public com.wbsedcl.trms.kafka.substation.log.avro.model.LoggedInterruptionAvroModel.Builder setFaultNature(com.wbsedcl.trms.kafka.substation.log.avro.model.FaultNature value) {
      validate(fields()[5], value);
      this.faultNature = value;
      fieldSetFlags()[5] = true;
      return this;
    }

    /**
      * Checks whether the 'faultNature' field has been set.
      * @return True if the 'faultNature' field has been set, false otherwise.
      */
    public boolean hasFaultNature() {
      return fieldSetFlags()[5];
    }


    /**
      * Clears the value of the 'faultNature' field.
      * @return This builder.
      */
    public com.wbsedcl.trms.kafka.substation.log.avro.model.LoggedInterruptionAvroModel.Builder clearFaultNature() {
      faultNature = null;
      fieldSetFlags()[5] = false;
      return this;
    }

    /**
      * Gets the value of the 'createdBy' field.
      * @return The value.
      */
    public java.lang.String getCreatedBy() {
      return createdBy;
    }


    /**
      * Sets the value of the 'createdBy' field.
      * @param value The value of 'createdBy'.
      * @return This builder.
      */
    public com.wbsedcl.trms.kafka.substation.log.avro.model.LoggedInterruptionAvroModel.Builder setCreatedBy(java.lang.String value) {
      validate(fields()[6], value);
      this.createdBy = value;
      fieldSetFlags()[6] = true;
      return this;
    }

    /**
      * Checks whether the 'createdBy' field has been set.
      * @return True if the 'createdBy' field has been set, false otherwise.
      */
    public boolean hasCreatedBy() {
      return fieldSetFlags()[6];
    }


    /**
      * Clears the value of the 'createdBy' field.
      * @return This builder.
      */
    public com.wbsedcl.trms.kafka.substation.log.avro.model.LoggedInterruptionAvroModel.Builder clearCreatedBy() {
      createdBy = null;
      fieldSetFlags()[6] = false;
      return this;
    }

    /**
      * Gets the value of the 'startDate' field.
      * @return The value.
      */
    public java.time.LocalDate getStartDate() {
      return startDate;
    }


    /**
      * Sets the value of the 'startDate' field.
      * @param value The value of 'startDate'.
      * @return This builder.
      */
    public com.wbsedcl.trms.kafka.substation.log.avro.model.LoggedInterruptionAvroModel.Builder setStartDate(java.time.LocalDate value) {
      validate(fields()[7], value);
      this.startDate = value;
      fieldSetFlags()[7] = true;
      return this;
    }

    /**
      * Checks whether the 'startDate' field has been set.
      * @return True if the 'startDate' field has been set, false otherwise.
      */
    public boolean hasStartDate() {
      return fieldSetFlags()[7];
    }


    /**
      * Clears the value of the 'startDate' field.
      * @return This builder.
      */
    public com.wbsedcl.trms.kafka.substation.log.avro.model.LoggedInterruptionAvroModel.Builder clearStartDate() {
      fieldSetFlags()[7] = false;
      return this;
    }

    /**
      * Gets the value of the 'startTime' field.
      * @return The value.
      */
    public long getStartTime() {
      return startTime;
    }


    /**
      * Sets the value of the 'startTime' field.
      * @param value The value of 'startTime'.
      * @return This builder.
      */
    public com.wbsedcl.trms.kafka.substation.log.avro.model.LoggedInterruptionAvroModel.Builder setStartTime(long value) {
      validate(fields()[8], value);
      this.startTime = value;
      fieldSetFlags()[8] = true;
      return this;
    }

    /**
      * Checks whether the 'startTime' field has been set.
      * @return True if the 'startTime' field has been set, false otherwise.
      */
    public boolean hasStartTime() {
      return fieldSetFlags()[8];
    }


    /**
      * Clears the value of the 'startTime' field.
      * @return This builder.
      */
    public com.wbsedcl.trms.kafka.substation.log.avro.model.LoggedInterruptionAvroModel.Builder clearStartTime() {
      fieldSetFlags()[8] = false;
      return this;
    }

    /**
      * Gets the value of the 'restoredBy' field.
      * @return The value.
      */
    public java.lang.String getRestoredBy() {
      return restoredBy;
    }


    /**
      * Sets the value of the 'restoredBy' field.
      * @param value The value of 'restoredBy'.
      * @return This builder.
      */
    public com.wbsedcl.trms.kafka.substation.log.avro.model.LoggedInterruptionAvroModel.Builder setRestoredBy(java.lang.String value) {
      validate(fields()[9], value);
      this.restoredBy = value;
      fieldSetFlags()[9] = true;
      return this;
    }

    /**
      * Checks whether the 'restoredBy' field has been set.
      * @return True if the 'restoredBy' field has been set, false otherwise.
      */
    public boolean hasRestoredBy() {
      return fieldSetFlags()[9];
    }


    /**
      * Clears the value of the 'restoredBy' field.
      * @return This builder.
      */
    public com.wbsedcl.trms.kafka.substation.log.avro.model.LoggedInterruptionAvroModel.Builder clearRestoredBy() {
      restoredBy = null;
      fieldSetFlags()[9] = false;
      return this;
    }

    /**
      * Gets the value of the 'interruptionStatus' field.
      * @return The value.
      */
    public com.wbsedcl.trms.kafka.substation.log.avro.model.InterruptionStatus getInterruptionStatus() {
      return interruptionStatus;
    }


    /**
      * Sets the value of the 'interruptionStatus' field.
      * @param value The value of 'interruptionStatus'.
      * @return This builder.
      */
    public com.wbsedcl.trms.kafka.substation.log.avro.model.LoggedInterruptionAvroModel.Builder setInterruptionStatus(com.wbsedcl.trms.kafka.substation.log.avro.model.InterruptionStatus value) {
      validate(fields()[10], value);
      this.interruptionStatus = value;
      fieldSetFlags()[10] = true;
      return this;
    }

    /**
      * Checks whether the 'interruptionStatus' field has been set.
      * @return True if the 'interruptionStatus' field has been set, false otherwise.
      */
    public boolean hasInterruptionStatus() {
      return fieldSetFlags()[10];
    }


    /**
      * Clears the value of the 'interruptionStatus' field.
      * @return This builder.
      */
    public com.wbsedcl.trms.kafka.substation.log.avro.model.LoggedInterruptionAvroModel.Builder clearInterruptionStatus() {
      interruptionStatus = null;
      fieldSetFlags()[10] = false;
      return this;
    }

    /**
      * Gets the value of the 'cause' field.
      * @return The value.
      */
    public java.lang.String getCause() {
      return cause;
    }


    /**
      * Sets the value of the 'cause' field.
      * @param value The value of 'cause'.
      * @return This builder.
      */
    public com.wbsedcl.trms.kafka.substation.log.avro.model.LoggedInterruptionAvroModel.Builder setCause(java.lang.String value) {
      validate(fields()[11], value);
      this.cause = value;
      fieldSetFlags()[11] = true;
      return this;
    }

    /**
      * Checks whether the 'cause' field has been set.
      * @return True if the 'cause' field has been set, false otherwise.
      */
    public boolean hasCause() {
      return fieldSetFlags()[11];
    }


    /**
      * Clears the value of the 'cause' field.
      * @return This builder.
      */
    public com.wbsedcl.trms.kafka.substation.log.avro.model.LoggedInterruptionAvroModel.Builder clearCause() {
      cause = null;
      fieldSetFlags()[11] = false;
      return this;
    }

    /**
      * Gets the value of the 'endDate' field.
      * @return The value.
      */
    public java.time.LocalDate getEndDate() {
      return endDate;
    }


    /**
      * Sets the value of the 'endDate' field.
      * @param value The value of 'endDate'.
      * @return This builder.
      */
    public com.wbsedcl.trms.kafka.substation.log.avro.model.LoggedInterruptionAvroModel.Builder setEndDate(java.time.LocalDate value) {
      validate(fields()[12], value);
      this.endDate = value;
      fieldSetFlags()[12] = true;
      return this;
    }

    /**
      * Checks whether the 'endDate' field has been set.
      * @return True if the 'endDate' field has been set, false otherwise.
      */
    public boolean hasEndDate() {
      return fieldSetFlags()[12];
    }


    /**
      * Clears the value of the 'endDate' field.
      * @return This builder.
      */
    public com.wbsedcl.trms.kafka.substation.log.avro.model.LoggedInterruptionAvroModel.Builder clearEndDate() {
      endDate = null;
      fieldSetFlags()[12] = false;
      return this;
    }

    /**
      * Gets the value of the 'endTime' field.
      * @return The value.
      */
    public java.lang.Long getEndTime() {
      return endTime;
    }


    /**
      * Sets the value of the 'endTime' field.
      * @param value The value of 'endTime'.
      * @return This builder.
      */
    public com.wbsedcl.trms.kafka.substation.log.avro.model.LoggedInterruptionAvroModel.Builder setEndTime(java.lang.Long value) {
      validate(fields()[13], value);
      this.endTime = value;
      fieldSetFlags()[13] = true;
      return this;
    }

    /**
      * Checks whether the 'endTime' field has been set.
      * @return True if the 'endTime' field has been set, false otherwise.
      */
    public boolean hasEndTime() {
      return fieldSetFlags()[13];
    }


    /**
      * Clears the value of the 'endTime' field.
      * @return This builder.
      */
    public com.wbsedcl.trms.kafka.substation.log.avro.model.LoggedInterruptionAvroModel.Builder clearEndTime() {
      endTime = null;
      fieldSetFlags()[13] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public LoggedInterruptionAvroModel build() {
      try {
        LoggedInterruptionAvroModel record = new LoggedInterruptionAvroModel();
        record.interruptionId = fieldSetFlags()[0] ? this.interruptionId : (java.util.UUID) defaultValue(fields()[0]);
        record.sagaId = fieldSetFlags()[1] ? this.sagaId : (java.util.UUID) defaultValue(fields()[1]);
        record.faultyFeederId = fieldSetFlags()[2] ? this.faultyFeederId : (java.lang.String) defaultValue(fields()[2]);
        record.substationOfficeId = fieldSetFlags()[3] ? this.substationOfficeId : (java.lang.String) defaultValue(fields()[3]);
        record.interruptionType = fieldSetFlags()[4] ? this.interruptionType : (com.wbsedcl.trms.kafka.substation.log.avro.model.InterruptionType) defaultValue(fields()[4]);
        record.faultNature = fieldSetFlags()[5] ? this.faultNature : (com.wbsedcl.trms.kafka.substation.log.avro.model.FaultNature) defaultValue(fields()[5]);
        record.createdBy = fieldSetFlags()[6] ? this.createdBy : (java.lang.String) defaultValue(fields()[6]);
        record.startDate = fieldSetFlags()[7] ? this.startDate : (java.time.LocalDate) defaultValue(fields()[7]);
        record.startTime = fieldSetFlags()[8] ? this.startTime : (java.lang.Long) defaultValue(fields()[8]);
        record.restoredBy = fieldSetFlags()[9] ? this.restoredBy : (java.lang.String) defaultValue(fields()[9]);
        record.interruptionStatus = fieldSetFlags()[10] ? this.interruptionStatus : (com.wbsedcl.trms.kafka.substation.log.avro.model.InterruptionStatus) defaultValue(fields()[10]);
        record.cause = fieldSetFlags()[11] ? this.cause : (java.lang.String) defaultValue(fields()[11]);
        record.endDate = fieldSetFlags()[12] ? this.endDate : (java.time.LocalDate) defaultValue(fields()[12]);
        record.endTime = fieldSetFlags()[13] ? this.endTime : (java.lang.Long) defaultValue(fields()[13]);
        return record;
      } catch (org.apache.avro.AvroMissingFieldException e) {
        throw e;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<LoggedInterruptionAvroModel>
    WRITER$ = (org.apache.avro.io.DatumWriter<LoggedInterruptionAvroModel>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<LoggedInterruptionAvroModel>
    READER$ = (org.apache.avro.io.DatumReader<LoggedInterruptionAvroModel>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

}










